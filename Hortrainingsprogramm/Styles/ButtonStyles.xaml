<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:ripple="clr-namespace:Hortrainingsprogramm.Components">


    <Style x:Key="closeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Width="25"
                        Height="25"
                        Background="#FF8D1717"
                        CornerRadius="100">

                        <Border
                            x:Name="border"
                            Width="23"
                            Height="23"
                            Background="#FFBE1622"
                            CornerRadius="20">

                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">

                                <Rectangle
                                    x:Name="rect1"
                                    Width="17"
                                    Height="3"
                                    Fill="#CCFFFFFF"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-40" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle
                                    x:Name="rect2"
                                    Width="17"
                                    Height="3"
                                    Fill="#CCFFFFFF"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="40" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFC81010" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                            <Setter TargetName="rect2" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF501414" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                            <Setter TargetName="rect2" Property="Fill" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="minimizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        Width="25"
                        Height="25"
                        Background="#FFDE9F34"
                        CornerRadius="40">

                        <Border
                            x:Name="border"
                            Width="23"
                            Height="23"
                            Background="#FFFDBC40"
                            CornerRadius="40">


                            <Rectangle
                                x:Name="rect1"
                                Width="17"
                                Height="4"
                                Fill="#FF985712" />

                        </Border>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFCCC35B" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF4C3910" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="maximizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">


                    <Border
                        Width="25"
                        Height="25"
                        Background="#FF27AA35"
                        CornerRadius="40">

                        <Border
                            x:Name="border"
                            Width="23"
                            Height="23"
                            Background="#FF33C748"
                            CornerRadius="20">


                            <Grid>
                                <Rectangle
                                    x:Name="rect1"
                                    Width="14"
                                    Height="14"
                                    Fill="#FF0B650D" />

                                <Rectangle
                                    x:Name="rect2"
                                    Width="20"
                                    Height="4"
                                    Fill="#FF33C748"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-40" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>

                            </Grid>

                        </Border>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF11EA0A" />
                            <Setter TargetName="rect2" Property="Fill" Value="#FF11EA0A" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF4C3910" />
                            <Setter TargetName="rect1" Property="Fill" Value="White" />
                            <Setter TargetName="rect2" Property="Fill" Value="#FF4C3910" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="loginRegisterButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="1"
                            CornerRadius="15">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#a67c00" />
                                    <GradientStop Offset="0.468" Color="#bf9b30" />
                                    <GradientStop Offset="1" Color="#ffbf00" />
                                    <GradientStop Offset="0.212" Color="#ffcf40" />
                                    <GradientStop Offset="0.772" Color="#ffdc73" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Grid>
                                <Border
                                    x:Name="insideBorder"
                                    Background="#66FFFFFF"
                                    CornerRadius="15"
                                    Opacity="0" />
                                <ContentPresenter />
                            </Grid>


                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnter" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnd" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryEnter">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="0.5"
                                            Duration="0:0:0.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryEnd">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SignUpButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border
                            x:Name="border"
                            Background="Transparent"
                            BorderThickness="1"
                            CornerRadius="10">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#a67c00" />
                                    <GradientStop Offset="0.468" Color="#bf9b30" />
                                    <GradientStop Offset="1" Color="#ffbf00" />
                                    <GradientStop Offset="0.212" Color="#ffcf40" />
                                    <GradientStop Offset="0.772" Color="#ffdc73" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Grid>
                                <Border
                                    x:Name="insideBorder"
                                    Background="#66FFFFFF"
                                    CornerRadius="10"
                                    Opacity="0" />
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                            </Grid>



                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnter" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnd" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>


                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryEnter">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="0.5"
                                            Duration="0:0:0.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryEnd">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ZoomButtonStyle" TargetType="Button">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" />
                        <ContentPresenter />
                    </Grid>


                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>



                        <!--  Zoom in when the mouse is over the button  -->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!--  Zoom out when the mouse leaves the button  -->

                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--  Zoom out when the button is clicked  -->

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="LogoutCustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>
                            <Border
                                x:Name="insideBorder"
                                Background="#3FFFFFFF"
                                Opacity="0" />

                            <ContentPresenter />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnter" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryEnd" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryEnter">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="0.5"
                                            Duration="0:0:0.2" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryEnd">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="insideBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ripple:RippleEffectDecorator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ripple:RippleEffectDecorator}">
                    <Grid
                        x:Name="PART_grid"
                        Background="{TemplateBinding Background}"
                        ClipToBounds="True">
                        <Ellipse
                            x:Name="PART_ellipse"
                            Width="0"
                            Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Fill="{Binding Path=HighlightBackground, RelativeSource={RelativeSource TemplatedParent}}" />

                        <ContentPresenter x:Name="PART_contentpresenter" />

                        <Grid.Resources>
                            <Storyboard x:Key="PART_animation" Storyboard.TargetName="PART_ellipse">
                                <DoubleAnimation Storyboard.TargetProperty="Width" From="0" />
                                <ThicknessAnimation Storyboard.TargetProperty="Margin" />
                                <DoubleAnimation
                                    BeginTime="0:0:0.55"
                                    Storyboard.TargetProperty="Opacity"
                                    From="1"
                                    To="0"
                                    Duration="0:0:0" />
                                <DoubleAnimation
                                    BeginTime="0:0:0.55"
                                    Storyboard.TargetProperty="Width"
                                    To="0"
                                    Duration="0:0:0" />
                                <DoubleAnimation
                                    BeginTime="0:0:0.55"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0" />
                            </Storyboard>
                        </Grid.Resources>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#CCBE1622" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#99BE1622" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="White" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#CCBE1622" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="White" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White" />


    <Style x:Key="ZoomButtonStyleForNormalButtons" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>



                    <ControlTemplate.Triggers>


                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>



                        <Trigger Property="IsPressed" Value="True">


                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />


                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard" />
                                <StopStoryboard BeginStoryboardName="MouseOverStoryBoard2" />
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="0.9"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>



                        <!--  Zoom in when the mouse is over the button  -->

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />


                            <Trigger.EnterActions>
                                <BeginStoryboard Name="MouseOverStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!--  Zoom out when the mouse leaves the button  -->

                            <Trigger.ExitActions>
                                <BeginStoryboard Name="MouseOverStoryBoard2">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!--  Zoom out when the button is clicked  -->


                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>